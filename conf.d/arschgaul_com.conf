server {
	listen 80;
	listen [::]:80;
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name keypass.arschgaul.com;

	access_log  /var/log/nginx/access-keypass.arschgaul.com.log;

	# certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets on;

	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	ssl_dhparam /etc/letsencrypt/dhparams.pem;

	# modern configuration. tweak to your needs.
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
	ssl_prefer_server_ciphers on;

	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security max-age=15768000;

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	#ssl_stapling on;
	#ssl_stapling_verify on;

	ssl_certificate		/etc/letsencrypt/live/arschgaul.com/fullchain.pem;
	ssl_certificate_key	/etc/letsencrypt/live/arschgaul.com/privkey.pem;

	include conf.inc/letsencrypt-acme-folder.conf;

	if ($ssl_protocol = "") {
		rewrite	^/(.*)	https://$server_name/$1 permanent;
	}

	client_max_body_size	8M;
	create_full_put_path	on;
	dav_access		user:rw group:rw all:rw;

	location /db {
		root			/var/www/keypass.arschgaul.com;
		dav_methods		PUT DELETE MKCOL COPY MOVE;
		#dav_ext_methods		PROPFIND OPTIONS;
	}

	location / {
		proxy_pass https://keeweb.internal;
	}
}
